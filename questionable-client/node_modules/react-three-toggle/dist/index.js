"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var use_did_update_1 = __importDefault(require("@rooks/use-did-update"));
var styles_1 = require("./styles");
var ReactThreeToggle = react_1.forwardRef(function (_a, ref) {
    var _b = _a.className, _c = _b === void 0 ? {
        selectedClassName: undefined,
        wrapperClassName: undefined,
    } : _b, selectedClassName = _c.selectedClassName, wrapperClassName = _c.wrapperClassName, _d = _a.height, height = _d === void 0 ? 16 : _d, initialValue = _a.initialValue, isVertical = _a.isVertical, isWrap = _a.isWrap, name = _a.name, onChange = _a.onChange, _e = _a.style, _f = _e === void 0 ? {
        selectedStyle: undefined,
        wrapperStyle: undefined,
    } : _e, selectedStyle = _f.selectedStyle, wrapperStyle = _f.wrapperStyle, values = _a.values, _g = _a.width, width = _g === void 0 ? 48 : _g;
    var optionValues = react_1.useMemo(function () {
        return values.map(function (v) {
            return typeof v === "string" ? v : v.value;
        });
    }, [values]);
    var _h = react_1.useState(typeof initialValue === "string" ? initialValue : optionValues[0]), value = _h[0], setValue = _h[1];
    var _j = react_1.useState(false), wrap = _j[0], setWrap = _j[1];
    var handleClick = react_1.useCallback(function (e) {
        e.preventDefault();
        setValue(function (prevValue) {
            var index = optionValues.findIndex(function (value) { return prevValue === value; });
            var value = prevValue;
            if (isWrap) {
                if (index === 0 || index === 2) {
                    value = optionValues[1];
                }
                else {
                    value = optionValues[wrap ? 0 : 2];
                }
            }
            else {
                value = optionValues[index === 2 ? 0 : index + 1];
            }
            return value;
        });
    }, [isWrap, optionValues, wrap]);
    var options = react_1.useMemo(function () {
        return values.map(function (v) {
            return typeof v === "string" ? (react_1.default.createElement("option", { key: v, value: v })) : (react_1.default.createElement("option", { key: v.value, value: v.value }));
        });
    }, [values]);
    var selected = react_1.useMemo(function () {
        var index = optionValues.findIndex(function (v) { return value === v; });
        return ["first", "second", "third"][index];
    }, [optionValues, value]);
    var handleChange = react_1.useCallback(function () { }, []);
    var selectedNode = react_1.useMemo(function () {
        var foundValue = values.find(function (v) { return value === (typeof v === "string" ? v : v.value); });
        if (typeof foundValue === "undefined") {
            return null;
        }
        return (react_1.default.createElement(styles_1.Selected, { className: selectedClassName, height: height, isVertical: isVertical, selected: selected, style: selectedStyle, width: width }, typeof foundValue === "string" ? null : foundValue.label));
    }, [
        height,
        isVertical,
        selected,
        selectedClassName,
        selectedStyle,
        value,
        values,
        width,
    ]);
    react_1.useEffect(function () {
        if (selected !== "first" && selected !== "third") {
            return;
        }
        setWrap(selected === "third");
    }, [selected]);
    use_did_update_1.default(function () {
        if (!onChange) {
            return;
        }
        var currentValue = values.find(function (v) {
            return typeof v === "string" ? value === v : value === v.value;
        });
        if (!currentValue) {
            return;
        }
        onChange(currentValue);
    }, [onChange, value]);
    return (react_1.default.createElement(styles_1.Wrapper, { className: wrapperClassName, height: height, onClick: handleClick, style: wrapperStyle, width: width },
        react_1.default.createElement(styles_1.Inner, null, selectedNode),
        react_1.default.createElement(styles_1.Select, { name: name, onChange: handleChange, ref: ref, value: value }, options)));
});
exports.default = ReactThreeToggle;
//# sourceMappingURL=index.js.map