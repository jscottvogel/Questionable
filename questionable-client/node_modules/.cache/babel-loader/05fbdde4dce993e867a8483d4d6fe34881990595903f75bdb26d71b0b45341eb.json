{"ast":null,"code":"var _jsxFileName = \"/home/fred/Questionable/questionable-client/src/pages/AdminRouteGuard.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../AuthContext\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminRouteGuard({\n  children\n}) {\n  _s();\n  const {\n    user,\n    session,\n    isLoading\n  } = useContext(AuthContext);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  } else {\n    // check the session to see if user is in admin group\n\n    if (user) {\n      if (session) {\n        //console.log( session );\n        //console.log( session.idToken );\n        //console.log( session.idToken.payload );\n        //console.log( session.idToken.payload[ 'cognito:groups' ] );\n        let groups = session.idToken.payload['cognito:groups'];\n        //console.log( groups );\n        if (groups.length === 0 || !groups.includes(\"Administrators\")) {\n          return /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 28\n          }, this);\n        }\n      }\n    }\n  }\n  return children;\n}\n_s(AdminRouteGuard, \"1MdhzrKvzyQkibjdO/scQI3CGlc=\");\n_c = AdminRouteGuard;\nexport default AdminRouteGuard;\nvar _c;\n$RefreshReg$(_c, \"AdminRouteGuard\");","map":{"version":3,"names":["useContext","Navigate","AuthContext","Fragment","_Fragment","jsxDEV","_jsxDEV","AdminRouteGuard","children","_s","user","session","isLoading","to","fileName","_jsxFileName","lineNumber","columnNumber","groups","idToken","payload","length","includes","_c","$RefreshReg$"],"sources":["/home/fred/Questionable/questionable-client/src/pages/AdminRouteGuard.js"],"sourcesContent":["import { useContext } from \"react\"\nimport { Navigate } from \"react-router-dom\"\nimport { AuthContext } from \"../AuthContext\"\n\nfunction AdminRouteGuard( { children } ) {\n    const { user, session, isLoading } = useContext( AuthContext )\n\n    if ( isLoading ) {\n        return <></>\n    }\n\n    if ( !user ) {\n        return <Navigate to=\"/login\" />\n    } else {\n        // check the session to see if user is in admin group\n\n        if ( user ) {\n            if ( session ) {\n                //console.log( session );\n                //console.log( session.idToken );\n                //console.log( session.idToken.payload );\n                //console.log( session.idToken.payload[ 'cognito:groups' ] );\n                let groups = session.idToken.payload[ 'cognito:groups' ];\n                //console.log( groups );\n                if ( groups.length === 0 || !groups.includes( \"Administrators\" ) ) {\n                    return <Navigate to=\"/\" />\n                }\n            }\n        }\n    }\n\n    return children\n}\n\nexport default AdminRouteGuard"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,gBAAgB;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,eAAeA,CAAE;EAAEC;AAAS,CAAC,EAAG;EAAAC,EAAA;EACrC,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAGZ,UAAU,CAAEE,WAAY,CAAC;EAE9D,IAAKU,SAAS,EAAG;IACb,oBAAON,OAAA,CAAAF,SAAA,mBAAI,CAAC;EAChB;EAEA,IAAK,CAACM,IAAI,EAAG;IACT,oBAAOJ,OAAA,CAACL,QAAQ;MAACY,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC,CAAC,MAAM;IACH;;IAEA,IAAKP,IAAI,EAAG;MACR,IAAKC,OAAO,EAAG;QACX;QACA;QACA;QACA;QACA,IAAIO,MAAM,GAAGP,OAAO,CAACQ,OAAO,CAACC,OAAO,CAAE,gBAAgB,CAAE;QACxD;QACA,IAAKF,MAAM,CAACG,MAAM,KAAK,CAAC,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAE,gBAAiB,CAAC,EAAG;UAC/D,oBAAOhB,OAAA,CAACL,QAAQ;YAACY,EAAE,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAC9B;MACJ;IACJ;EACJ;EAEA,OAAOT,QAAQ;AACnB;AAACC,EAAA,CA5BQF,eAAe;AAAAgB,EAAA,GAAfhB,eAAe;AA8BxB,eAAeA,eAAe;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}