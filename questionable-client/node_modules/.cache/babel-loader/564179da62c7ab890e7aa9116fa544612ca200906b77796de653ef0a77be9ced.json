{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst proxyHost = '127.0.0.1';\nconst proxyPort = 3500;\n\n// Proxy URL\nconst proxyUrl = `http://${proxyHost}:${proxyPort}`;\nconst initialState = [];\nconst eventsSlice = createSlice({\n  name: 'events',\n  initialState: {\n    events: initialState\n  },\n  reducers: {\n    loadEvents: (state, action) => {\n      // check to see if there are any new events\n      // if so, add them to the state\n      // if not, do nothing\n      if (state.events.length === 0) {\n        state.events = action.payload;\n      } else {\n        let temp = state.events.filter(event => event.id !== action.payload.id);\n        if (temp.length !== state.events.length) {\n          state.events = action.payload;\n        }\n      }\n    },\n    addEvent: (state, action) => {\n      let newEvent = {};\n      newEvent.name = action.payload.name;\n      newEvent.eventDate = action.payload.eventDate;\n      let evt = addNewEvent(newEvent);\n      if (evt !== null) {\n        state.events.push(evt);\n      }\n    },\n    deleteEvent: (state, action) => {\n      const eventId = action.payload;\n      state.events = state.events.filter(event => event.id !== eventId);\n    },\n    updateEvent: (state, action) => {\n      let modifiedEvent = {};\n      modifiedEvent.id = action.payload.id;\n      modifiedEvent.name = action.payload.name;\n      modifiedEvent.eventDate = action.payload.eventDate;\n      modifyEvent(modifiedEvent);\n      let newState = [...state.events];\n      const index = newState.findIndex(event => event.id === modifiedEvent.id);\n      newState[index].id = modifiedEvent.id;\n      newState[index].name = modifiedEvent.name;\n      newState[index].eventDate = modifiedEvent.eventDate;\n      state.events = newState;\n    }\n  }\n});\n\n// Write a function that has `dispatch` and `getState` as arguments\nconst fetchEvents = (dispatch, getState) => {\n  // Make an async HTTP request\n  return fetch('http://127.0.0.1:3500/events', {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached\n  }).then(res => {\n    console.log(res);\n    const evts = res.json();\n    console.log(evts);\n    return evts;\n  }).then(evts => {\n    dispatch({\n      type: \"events/loadEvents\",\n      payload: evts\n    });\n  }).catch(err => console.log(err));\n  // todo, error condition\n};\n\nfunction removeEvent(id, dispatch) {\n  //console.log( \"deleteEvent: \" + id );\n  return fetch(`http://127.0.0.1:3500/event/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached\n  }).then(response => {\n    if (response.ok) {\n      dispatch({\n        type: \"events/deleteEvent\",\n        payload: id\n      });\n    } else {\n      console.log(response);\n      console.log(\"Event not deleted\");\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n}\nfunction addNewEvent(newEvent) {\n  return fetch(`http://\n${proxyHost}:${proxyPort}/event`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    body: JSON.stringify(newEvent)\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      console.log(response);\n      console.log(\"Event not added\");\n      return null;\n    }\n  }).catch(error => {\n    console.log(error);\n    return null;\n  });\n}\nfunction modifyEvent(updatedEvent) {\n  return fetch(`http://\n${proxyHost}:${proxyPort}/event/${updatedEvent.id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    body: JSON.stringify(updatedEvent)\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      console.log(response);\n      console.log(\"Event not updated\");\n      return null;\n    }\n  }).catch(error => {\n    console.log(error);\n    return null;\n  });\n}\nexport const {\n  loadEvents,\n  addEvent,\n  deleteEvent,\n  updateEvent\n} = eventsSlice.actions;\nexport { fetchEvents, removeEvent };\nexport default eventsSlice.reducer;","map":{"version":3,"names":["createSlice","proxyHost","proxyPort","proxyUrl","initialState","eventsSlice","name","events","reducers","loadEvents","state","action","length","payload","temp","filter","event","id","addEvent","newEvent","eventDate","evt","addNewEvent","push","deleteEvent","eventId","updateEvent","modifiedEvent","modifyEvent","newState","index","findIndex","fetchEvents","dispatch","getState","fetch","method","headers","cache","then","res","console","log","evts","json","type","catch","err","removeEvent","response","ok","error","body","JSON","stringify","updatedEvent","actions","reducer"],"sources":["/home/fred/Questionable/questionable-client/src/features/events/eventsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst proxyHost = '127.0.0.1';\nconst proxyPort = 3500;\n\n// Proxy URL\nconst proxyUrl = `http://${ proxyHost }:${ proxyPort }`;\n\nconst initialState = [];\n\nconst eventsSlice = createSlice( {\n    name: 'events',\n    initialState: {\n        events: initialState\n    },\n    reducers: {\n        loadEvents: ( state, action ) => {\n            // check to see if there are any new events\n            // if so, add them to the state\n            // if not, do nothing\n            if ( state.events.length === 0 ) {\n                state.events = action.payload;\n            } else {\n                let temp = state.events.filter( event => event.id !== action.payload.id );\n                if ( temp.length !== state.events.length ) {\n                    state.events = action.payload;\n                }\n            }\n        },\n        addEvent: ( state, action ) => {\n            let newEvent = {};\n            newEvent.name = action.payload.name;\n            newEvent.eventDate = action.payload.eventDate;\n\n            let evt = addNewEvent( newEvent );\n\n            if ( evt !== null ) {\n                state.events.push( evt );\n            }\n        },\n        deleteEvent: ( state, action ) => {\n            const eventId = action.payload;\n            state.events = state.events.filter( event => event.id !== eventId );\n        },\n        updateEvent: ( state, action ) => {\n            let modifiedEvent = {};\n            modifiedEvent.id = action.payload.id;\n            modifiedEvent.name = action.payload.name;\n            modifiedEvent.eventDate = action.payload.eventDate;\n\n            modifyEvent( modifiedEvent );\n\n            let newState = [ ...state.events ];\n            const index = newState.findIndex( event => event.id === modifiedEvent.id );\n            newState[ index ].id = modifiedEvent.id;\n            newState[ index ].name = modifiedEvent.name;\n            newState[ index ].eventDate = modifiedEvent.eventDate;\n\n            state.events = newState;\n        }\n    }\n} );\n\n// Write a function that has `dispatch` and `getState` as arguments\nconst fetchEvents = ( dispatch, getState ) => {\n    // Make an async HTTP request\n    return fetch( 'http://127.0.0.1:3500/events', {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n        cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached\n    } ).then( res => {\n        console.log( res );\n        const evts = res.json();\n        console.log( evts );\n        return evts;\n    } ).then( evts => {\n        dispatch( { type: \"events/loadEvents\", payload: evts } );\n    } ).catch( err => console.log( err ) );\n    // todo, error condition\n\n}\n\nfunction removeEvent( id, dispatch ) {\n    //console.log( \"deleteEvent: \" + id );\n    return fetch( `http://127.0.0.1:3500/event/${ id }`, {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n        cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached\n    } )\n        .then( response => {\n            if ( response.ok ) {\n                dispatch( { type: \"events/deleteEvent\", payload: id } );\n            } else {\n                console.log( response );\n                console.log( \"Event not deleted\" );\n            }\n        } )\n        .catch( error => {\n            console.log( error );\n        } );\n}\n\nfunction addNewEvent( newEvent ) {\n    return fetch( `http://\n${ proxyHost }:${ proxyPort }/event`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        body: JSON.stringify( newEvent )\n    } )\n        .then( response => {\n            if ( response.ok ) {\n                return response.json();\n            } else {\n                console.log( response );\n                console.log( \"Event not added\" );\n                return null;\n            }\n        } )\n        .catch( error => {\n            console.log( error );\n            return null;\n        } );\n}\n\nfunction modifyEvent( updatedEvent ) {\n    return fetch( `http://\n${ proxyHost }:${ proxyPort }/event/${ updatedEvent.id }`, {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        body: JSON.stringify( updatedEvent )\n    } )\n        .then( response => {\n            if ( response.ok ) {\n                return response.json();\n            } else {\n                console.log( response );\n                console.log( \"Event not updated\" );\n                return null;\n            }\n        } )\n        .catch( error => {\n            console.log( error );\n            return null;\n        } );\n}\n\nexport const { loadEvents, addEvent, deleteEvent, updateEvent } = eventsSlice.actions;\n\nexport { fetchEvents, removeEvent };\n\nexport default eventsSlice.reducer;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}