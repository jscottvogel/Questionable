{"ast":null,"code":"import { CognitoUserPool, CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\nimport { cognitoConfig } from \"./cognitoConfig\";\nconst userPool = new CognitoUserPool({\n  UserPoolId: cognitoConfig.UserPoolId,\n  ClientId: cognitoConfig.ClientId\n});\nexport function signIn(username, password) {\n  return new Promise((resolve, reject) => {\n    const authenticationDetails = new AuthenticationDetails({\n      Username: username,\n      Password: password\n    });\n    const cognitoUser = new CognitoUser({\n      Username: username,\n      Pool: userPool\n    });\n    cognitoUser.authenticateUser(authenticationDetails, {\n      onSuccess: result => {\n        resolve(result);\n      },\n      onFailure: err => {\n        reject(err);\n      }\n    });\n  });\n}\nexport function getSession() {\n  const cognitoUser = userPool.getCurrentUser();\n  return new Promise((resolve, reject) => {\n    if (!cognitoUser) {\n      reject(new Error(\"No user found\"));\n      return;\n    }\n    cognitoUser.getSession((err, session) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(session);\n    });\n  });\n}\nexport async function getCurrentUser() {\n  return new Promise((resolve, reject) => {\n    const cognitoUser = userPool.getCurrentUser();\n    if (!cognitoUser) {\n      reject(new Error(\"No user found\"));\n      return;\n    }\n    cognitoUser.getSession((err, session) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n      cognitoUser.getUserAttributes((err, attributes) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const userData = attributes.reduce((acc, attribute) => {\n          acc[attribute.Name] = attribute.Value;\n          return acc;\n        }, {});\n\n        //console.log( { ...userData, username: cognitoUser.username } );\n        //console.log( { session } );\n        resolve({\n          ...userData,\n          username: cognitoUser.username\n        });\n      });\n    });\n  });\n}\nexport function signOut() {\n  const cognitoUser = userPool.getCurrentUser();\n  if (cognitoUser) {\n    cognitoUser.signOut();\n  }\n}\nexport function confirmSignUp(username, code) {\n  return new Promise((resolve, reject) => {\n    const cognitoUser = new CognitoUser({\n      Username: username,\n      Pool: userPool\n    });\n    cognitoUser.confirmRegistration(code, true, (err, result) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(result);\n    });\n  });\n}\nexport function forgotPassword(username) {\n  return new Promise((resolve, reject) => {\n    const cognitoUser = new CognitoUser({\n      Username: username,\n      Pool: userPool\n    });\n    cognitoUser.forgotPassword({\n      onSuccess: () => {\n        resolve();\n      },\n      onFailure: err => {\n        reject(err);\n      }\n    });\n  });\n}\nexport function confirmPassword(username, confirmationCode, newPassword) {\n  return new Promise((resolve, reject) => {\n    const cognitoUser = new CognitoUser({\n      Username: username,\n      Pool: userPool\n    });\n    cognitoUser.confirmPassword(confirmationCode, newPassword, {\n      onSuccess: () => {\n        resolve();\n      },\n      onFailure: err => {\n        reject(err);\n      }\n    });\n  });\n}\nexport function signUp(username, email, password) {\n  return new Promise((resolve, reject) => {\n    userPool.signUp(username, password, [{\n      Name: \"email\",\n      Value: email\n    }], null, (err, result) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(result.user);\n    });\n  });\n}","map":{"version":3,"names":["CognitoUserPool","CognitoUser","AuthenticationDetails","cognitoConfig","userPool","UserPoolId","ClientId","signIn","username","password","Promise","resolve","reject","authenticationDetails","Username","Password","cognitoUser","Pool","authenticateUser","onSuccess","result","onFailure","err","getSession","getCurrentUser","Error","session","getUserAttributes","attributes","userData","reduce","acc","attribute","Name","Value","signOut","confirmSignUp","code","confirmRegistration","forgotPassword","confirmPassword","confirmationCode","newPassword","signUp","email","user"],"sources":["/home/fred/Questionable/questionable-client/src/auth.js"],"sourcesContent":["import {\n    CognitoUserPool,\n    CognitoUser,\n    AuthenticationDetails,\n} from \"amazon-cognito-identity-js\"\nimport { cognitoConfig } from \"./cognitoConfig\"\n\nconst userPool = new CognitoUserPool( {\n    UserPoolId: cognitoConfig.UserPoolId,\n    ClientId: cognitoConfig.ClientId,\n} )\n\nexport function signIn( username, password ) {\n    return new Promise( ( resolve, reject ) => {\n        const authenticationDetails = new AuthenticationDetails( {\n            Username: username,\n            Password: password,\n        } )\n\n        const cognitoUser = new CognitoUser( {\n            Username: username,\n            Pool: userPool,\n        } )\n\n        cognitoUser.authenticateUser( authenticationDetails, {\n            onSuccess: ( result ) => {\n                resolve( result )\n            },\n            onFailure: ( err ) => {\n                reject( err )\n            },\n        } )\n    } )\n}\n\nexport function getSession() {\n    const cognitoUser = userPool.getCurrentUser()\n    return new Promise( ( resolve, reject ) => {\n        if ( !cognitoUser ) {\n            reject( new Error( \"No user found\" ) )\n            return\n        }\n        cognitoUser.getSession( ( err, session ) => {\n            if ( err ) {\n                reject( err )\n                return\n            }\n            resolve( session )\n        } )\n    } )\n}\n\nexport async function getCurrentUser() {\n    return new Promise( ( resolve, reject ) => {\n        const cognitoUser = userPool.getCurrentUser()\n\n        if ( !cognitoUser ) {\n            reject( new Error( \"No user found\" ) )\n            return\n        }\n\n        cognitoUser.getSession( ( err, session ) => {\n            if ( err ) {\n                reject( err )\n                return\n            }\n            cognitoUser.getUserAttributes( ( err, attributes ) => {\n                if ( err ) {\n                    reject( err )\n                    return\n                }\n                const userData = attributes.reduce( ( acc, attribute ) => {\n                    acc[ attribute.Name ] = attribute.Value\n                    return acc\n                }, {} )\n\n                //console.log( { ...userData, username: cognitoUser.username } );\n                //console.log( { session } );\n                resolve( { ...userData, username: cognitoUser.username } )\n            } )\n        } )\n    } )\n}\n\nexport function signOut() {\n    const cognitoUser = userPool.getCurrentUser()\n    if ( cognitoUser ) {\n        cognitoUser.signOut()\n    }\n}\n\nexport function confirmSignUp( username, code ) {\n    return new Promise( ( resolve, reject ) => {\n        const cognitoUser = new CognitoUser( {\n            Username: username,\n            Pool: userPool,\n        } )\n\n        cognitoUser.confirmRegistration( code, true, ( err, result ) => {\n            if ( err ) {\n                reject( err )\n                return\n            }\n            resolve( result )\n        } )\n    } )\n}\n\nexport function forgotPassword( username ) {\n    return new Promise( ( resolve, reject ) => {\n        const cognitoUser = new CognitoUser( {\n            Username: username,\n            Pool: userPool,\n        } )\n\n        cognitoUser.forgotPassword( {\n            onSuccess: () => {\n                resolve()\n            },\n            onFailure: ( err ) => {\n                reject( err )\n            },\n        } )\n    } )\n}\n\nexport function confirmPassword( username, confirmationCode, newPassword ) {\n    return new Promise( ( resolve, reject ) => {\n        const cognitoUser = new CognitoUser( {\n            Username: username,\n            Pool: userPool,\n        } )\n\n        cognitoUser.confirmPassword( confirmationCode, newPassword, {\n            onSuccess: () => {\n                resolve()\n            },\n            onFailure: ( err ) => {\n                reject( err )\n            },\n        } )\n    } )\n}\n\nexport function signUp( username, email, password ) {\n    return new Promise( ( resolve, reject ) => {\n        userPool.signUp(\n            username,\n            password,\n            [ { Name: \"email\", Value: email } ],\n            null,\n            ( err, result ) => {\n                if ( err ) {\n                    reject( err )\n                    return\n                }\n                resolve( result.user )\n            }\n        )\n    } )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}