{"ast":null,"code":"var _jsxFileName = \"/home/fred/Questionable/questionable-client/src/features/events/EventDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { fetchEventDetail } from './eventDetailSlice';\nimport { processAdjustment } from './eventDetailSlice';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\nimport '../../app/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst selectEventDetail = state => state.currentEvent;\nfunction EventDetail() {\n  _s();\n  const eventDetailState = useSelector(selectEventDetail);\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetchEventDetail(dispatch, eventDetailState, id);\n  }, [dispatch, eventDetailState, id]);\n  const radios = [{\n    name: 'Like',\n    value: '1'\n  }, {\n    name: 'Neutral',\n    value: '0'\n  }, {\n    name: 'Dislike',\n    value: '-1'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n        href: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n        active: true,\n        children: \"Event Detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      bg: \"light\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"md-auto text-center p-4\",\n        children: \"Event Detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            border: \"secondary\",\n            bg: 'light',\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: eventDetailState.currentEvent.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Event Date: \", eventDetailState.currentEvent.eventDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                className: \"EventDetailForm\",\n                id: \"EventDetailForm\",\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  controlId: \"formEventDetail\",\n                  onKeyDown: evt => processAddQuestion(evt, dispatch),\n                  children: [/*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"question-table\",\n                    id: \"question-table\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          align: \"center\",\n                          children: \"Question\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 53,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          align: \"center\",\n                          children: \"Ranking\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 54,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          align: \"center\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 55,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          colSpan: \"4\",\n                          align: \"center\",\n                          children: \"Rating\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 56,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 52,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 51,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: eventDetailState.currentEvent.questions !== null && eventDetailState.currentEvent.questions !== undefined ? [...eventDetailState.currentEvent.questions].sort((a, b) => b.ranking - a.ranking).map(qVal => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: qVal.question\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 64,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: qVal.ranking\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 65,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          colSpan: \"5\",\n                          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                            className: \"like-buttons\",\n                            children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n                              id: `radio-${qVal.qid}-${idx}`,\n                              type: \"radio\",\n                              variant: \"primary\",\n                              name: `radio-${qVal.qid}`,\n                              value: radio.value,\n                              disabled: setButtonGroupState(eventDetailState.currentEvent.id, qVal.qid, idx),\n                              onChange: e => processButtonChange(e, eventDetailState.currentEvent.id, qVal.qid, dispatch),\n                              children: radio.name\n                            }, qVal.qid + \"-\" + idx, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 69,\n                              columnNumber: 69\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 67,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 66,\n                          columnNumber: 57\n                        }, this)]\n                      }, qVal.qid, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 53\n                      }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: /*#__PURE__*/_jsxDEV(\"td\", {\n                          colSpan: \"7\",\n                          children: /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: \"No Questions Found\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 87,\n                            columnNumber: 75\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 87,\n                          columnNumber: 59\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 87,\n                        columnNumber: 55\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Question\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Enter question\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, eventDetailState.currentEvent.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetail, \"cByVvdUnGU0j8PcYihSozbgDfB8=\", false, function () {\n  return [useSelector, useDispatch, useParams];\n});\n_c = EventDetail;\nfunction processAddQuestion(event, dispatch) {\n  //console.log( \"Add Question\" );\n  //console.log( event );\n\n  if (event !== null && event !== undefined) {\n    if (event.keyCode === 13 || event.which === 13) {\n      let newQuestion = event.target.value;\n\n      // todo: add question to the event\n      // set the ranking to 0\n      // add the question to the state\n      // clear the input field\n      event.target.value = \"Enter question\";\n      dispatch({\n        type: \"currentEvent/addQuestion\",\n        payload: newQuestion\n      });\n    }\n  }\n}\nfunction processButtonChange(uiEvt, eventId, questionId, dispatch) {\n  let buttonGroupId = eventId + \"-\" + questionId;\n\n  // get the previousValue of the buttons (remember, these are treated like one button)\n  // get the button state for this question from session storage\n  // if the button state is not found, then set the previousValue to 0\n  // if the button state is found, then set the previousValue to the button state\n  let previousValue = sessionStorage.getItem(buttonGroupId);\n  if (previousValue === undefined || previousValue === null) {\n    previousValue = 0;\n  }\n  let likeButton = uiEvt.target.form[`radio-${questionId}-${0}`];\n  let neutralButton = uiEvt.target.form[`radio-${questionId}-${1}`];\n  let dislikeButton = uiEvt.target.form[`radio-${questionId}-${2}`];\n\n  // if neutral button pressed, then if the question was liked, subtract 1 from the ranking\n  // if neutral button pressed, then if the question was disliked, add 1 to the ranking\n  // if neutral button pressed, then if the question was neutral, do nothing\n  // if like button pressed, then if the question was liked, do nothing\n  // if like button pressed, then if the question was disliked, add 2 to the ranking\n  // if like button pressed, then if the question was neutral, add 1 to the ranking\n  // if dislike button pressed, then if the question was liked, subtract 2 from the ranking\n  // if dislike button pressed, then if the question was disliked, do nothing\n  // if dislike button pressed, then if the question was neutral, subtract 1 from the ranking\n\n  let adjustment = 0;\n  if (uiEvt.target.value === \"0\") {\n    // like button unpressed\n    // neutral button pressed\n    // dislike button unpressed\n    likeButton.disabled = false;\n    neutralButton.disabled = true;\n    dislikeButton.disabled = false;\n    if (previousValue === \"1\") {\n      adjustment = -1;\n    } else if (previousValue === \"-1\") {\n      adjustment = 1;\n    } else {\n      adjustment = 0;\n    }\n  } else if (uiEvt.target.value === \"1\") {\n    // like button pressed\n    // neutral button unpressed\n    // dislike button unpressed\n    likeButton.disabled = true;\n    neutralButton.disabled = false;\n    dislikeButton.disabled = false;\n    if (previousValue === \"1\") {\n      adjustment = 0;\n    } else if (previousValue === \"-1\") {\n      adjustment = 2;\n    } else {\n      adjustment = 1;\n    }\n  } else if (uiEvt.target.value === \"-1\") {\n    // like button unpressed\n    // neutral button unpressed\n    // dislike button pressed\n    likeButton.disabled = false;\n    neutralButton.disabled = false;\n    dislikeButton.disabled = true;\n    if (previousValue === \"1\") {\n      adjustment = -2;\n    } else if (previousValue === \"-1\") {\n      adjustment = 0;\n    } else {\n      adjustment = -1;\n    }\n  }\n  sessionStorage.setItem(buttonGroupId, uiEvt.target.value);\n  processAdjustment(eventId, questionId, adjustment, dispatch);\n}\nfunction setButtonGroupState(evid, qid, bnum) {\n  let buttonGroupId = evid + \"-\" + qid;\n\n  // get the previousValue of the buttons (remember, these are treated like one button)\n  // get the button state for this question from session storage\n  // if the button state is not found, then set the previousValue to 0\n  // if the button state is found, then set the previousValue to the button state\n  let previousValue = sessionStorage.getItem(buttonGroupId);\n  if (previousValue === undefined || previousValue === null) {\n    previousValue = 0;\n    sessionStorage.setItem(buttonGroupId, previousValue);\n  }\n\n  // if neutral button pressed, then if the question was liked, subtract 1 from the ranking\n  // if neutral button pressed, then if the question was disliked, add 1 to the ranking\n  // if neutral button pressed, then if the question was neutral, do nothing\n  // if like button pressed, then if the question was liked, do nothing\n  // if like button pressed, then if the question was disliked, add 2 to the ranking\n  // if like button pressed, then if the question was neutral, add 1 to the ranking\n  // if dislike button pressed, then if the question was liked, subtract 2 from the ranking\n  // if dislike button pressed, then if the question was disliked, do nothing\n  // if dislike button pressed, then if the question was neutral, subtract 1 from the ranking\n\n  if (previousValue === \"0\") {\n    // like button unpressed\n    // neutral button pressed\n    // dislike button unpressed\n    if (bnum === 0) return false;\n    if (bnum === 1) return true;\n    if (bnum === 2) return false;\n  } else if (previousValue === \"1\") {\n    // like button pressed\n    // neutral button unpressed\n    // dislike button unpressed\n    if (bnum === 0) return true;\n    if (bnum === 1) return false;\n    if (bnum === 2) return false;\n  } else if (previousValue === \"-1\") {\n    // like button unpressed\n    // neutral button unpressed\n    // dislike button pressed\n    if (bnum === 0) return false;\n    if (bnum === 1) return false;\n    if (bnum === 2) return true;\n  }\n}\nexport default EventDetail;\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["React","useEffect","Card","Form","Container","Row","Col","useParams","useSelector","useDispatch","fetchEventDetail","processAdjustment","Breadcrumb","ButtonGroup","ToggleButton","jsxDEV","_jsxDEV","Fragment","_Fragment","selectEventDetail","state","currentEvent","EventDetail","_s","eventDetailState","dispatch","id","radios","name","value","children","Item","href","fileName","_jsxFileName","lineNumber","columnNumber","active","bg","className","border","Body","Title","eventDate","Group","controlId","onKeyDown","evt","processAddQuestion","align","colSpan","questions","undefined","sort","a","b","ranking","map","qVal","question","radio","idx","qid","type","variant","disabled","setButtonGroupState","onChange","e","processButtonChange","Label","Control","placeholder","_c","event","keyCode","which","newQuestion","target","payload","uiEvt","eventId","questionId","buttonGroupId","previousValue","sessionStorage","getItem","likeButton","form","neutralButton","dislikeButton","adjustment","setItem","evid","bnum","$RefreshReg$"],"sources":["/home/fred/Questionable/questionable-client/src/features/events/EventDetail.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { fetchEventDetail } from './eventDetailSlice';\nimport { processAdjustment } from './eventDetailSlice';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\nimport '../../app/App.css';\n\nconst selectEventDetail = state => state.currentEvent;\n\nfunction EventDetail() {\n    const eventDetailState = useSelector( selectEventDetail );\n\n    const dispatch = useDispatch();\n\n    const { id } = useParams();\n\n    useEffect( () => {\n        fetchEventDetail( dispatch, eventDetailState, id );\n    }, [ dispatch, eventDetailState, id ] );\n\n    const radios = [\n        { name: 'Like', value: '1' },\n        { name: 'Neutral', value: '0' },\n        { name: 'Dislike', value: '-1' },\n    ];\n\n    return (\n        <>\n            <Breadcrumb>\n                <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n                <Breadcrumb.Item active>Event Detail</Breadcrumb.Item>\n            </Breadcrumb>\n            <Container bg=\"light\">\n                <h2 className=\"md-auto text-center p-4\">Event Detail</h2>\n                <Row className=\"mb-3\">\n                    <Col className=\"mb-3\">\n                        < Card border=\"secondary\"\n                            bg={ 'light' }\n                            key={ eventDetailState.currentEvent.id } >\n                            <Card.Body>\n                                <Card.Title >{ eventDetailState.currentEvent.name }</Card.Title>\n                                <p>Event Date: { eventDetailState.currentEvent.eventDate }</p>\n                                <Form className=\"EventDetailForm\" id=\"EventDetailForm\">\n                                    <Form.Group className=\"mb-3\" controlId=\"formEventDetail\" onKeyDown={ ( evt ) => processAddQuestion( evt, dispatch ) } >\n                                        <table className=\"question-table\" id=\"question-table\">\n                                            <thead>\n                                                <tr>\n                                                    <th align=\"center\">Question</th>\n                                                    <th align=\"center\">Ranking</th>\n                                                    <th align=\"center\"></th>\n                                                    <th colSpan=\"4\" align=\"center\">Rating</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                { ( eventDetailState.currentEvent.questions !== null && eventDetailState.currentEvent.questions !== undefined ) ? [ ...eventDetailState.currentEvent.questions ].sort( ( a, b ) =>\n                                                    b.ranking - a.ranking\n                                                ).map( qVal => (\n                                                    < tr key={ qVal.qid } >\n                                                        <td>{ qVal.question }</td>\n                                                        <td>{ qVal.ranking }</td>\n                                                        <td colSpan=\"5\">\n                                                            <ButtonGroup className=\"like-buttons\">\n                                                                { radios.map( ( radio, idx ) => (\n                                                                    <ToggleButton\n                                                                        key={ qVal.qid + \"-\" + idx }\n                                                                        id={ `radio-${ qVal.qid }-${ idx }` }\n                                                                        type=\"radio\"\n                                                                        variant=\"primary\"\n                                                                        name={ `radio-${ qVal.qid }` }\n                                                                        value={ radio.value }\n                                                                        disabled={ setButtonGroupState( eventDetailState.currentEvent.id, qVal.qid, idx ) }\n                                                                        onChange={ ( e ) => processButtonChange( e, eventDetailState.currentEvent.id, qVal.qid, dispatch )\n                                                                        }\n                                                                    >\n                                                                        { radio.name }\n                                                                    </ToggleButton>\n                                                                ) ) }\n                                                            </ButtonGroup>\n\n                                                        </td>\n                                                    </tr>\n                                                ) ) : <tr><td colSpan=\"7\"><p>No Questions Found</p></td></tr> }\n                                            </tbody>\n                                        </table>\n\n                                        <div>\n                                            <Form.Label>Question</Form.Label>\n                                            <Form.Control type=\"text\" placeholder=\"Enter question\" />\n                                        </div>\n                                    </Form.Group>\n                                </Form>\n                            </Card.Body>\n                        </Card>\n                    </Col >\n                </Row >\n\n            </Container >\n        </> );\n}\n\nfunction processAddQuestion( event, dispatch ) {\n    //console.log( \"Add Question\" );\n    //console.log( event );\n\n    if ( event !== null && event !== undefined ) {\n\n        if ( event.keyCode === 13 || event.which === 13 ) {\n\n            let newQuestion = event.target.value;\n\n            // todo: add question to the event\n            // set the ranking to 0\n            // add the question to the state\n            // clear the input field\n            event.target.value = \"Enter question\";\n\n            dispatch( { type: \"currentEvent/addQuestion\", payload: newQuestion } );\n        }\n    }\n}\n\nfunction processButtonChange( uiEvt, eventId, questionId, dispatch ) {\n\n\n    let buttonGroupId = eventId + \"-\" + questionId;\n\n    // get the previousValue of the buttons (remember, these are treated like one button)\n    // get the button state for this question from session storage\n    // if the button state is not found, then set the previousValue to 0\n    // if the button state is found, then set the previousValue to the button state\n    let previousValue = sessionStorage.getItem( buttonGroupId );\n    if ( previousValue === undefined || previousValue === null ) {\n        previousValue = 0;\n    }\n\n    let likeButton = uiEvt.target.form[ `radio-${ questionId }-${ 0 }` ];\n    let neutralButton = uiEvt.target.form[ `radio-${ questionId }-${ 1 }` ];\n    let dislikeButton = uiEvt.target.form[ `radio-${ questionId }-${ 2 }` ];\n\n    // if neutral button pressed, then if the question was liked, subtract 1 from the ranking\n    // if neutral button pressed, then if the question was disliked, add 1 to the ranking\n    // if neutral button pressed, then if the question was neutral, do nothing\n    // if like button pressed, then if the question was liked, do nothing\n    // if like button pressed, then if the question was disliked, add 2 to the ranking\n    // if like button pressed, then if the question was neutral, add 1 to the ranking\n    // if dislike button pressed, then if the question was liked, subtract 2 from the ranking\n    // if dislike button pressed, then if the question was disliked, do nothing\n    // if dislike button pressed, then if the question was neutral, subtract 1 from the ranking\n\n    let adjustment = 0;\n\n    if ( uiEvt.target.value === \"0\" ) {\n        // like button unpressed\n        // neutral button pressed\n        // dislike button unpressed\n        likeButton.disabled = false;\n        neutralButton.disabled = true;\n        dislikeButton.disabled = false;\n        if ( previousValue === \"1\" ) {\n            adjustment = -1;\n        } else if ( previousValue === \"-1\" ) {\n            adjustment = 1;\n        } else {\n            adjustment = 0;\n        }\n    } else if ( uiEvt.target.value === \"1\" ) {\n        // like button pressed\n        // neutral button unpressed\n        // dislike button unpressed\n        likeButton.disabled = true;\n        neutralButton.disabled = false;\n        dislikeButton.disabled = false;\n        if ( previousValue === \"1\" ) {\n            adjustment = 0;\n        } else if ( previousValue === \"-1\" ) {\n            adjustment = 2;\n        } else {\n            adjustment = 1;\n        }\n    } else if ( uiEvt.target.value === \"-1\" ) {\n        // like button unpressed\n        // neutral button unpressed\n        // dislike button pressed\n        likeButton.disabled = false;\n        neutralButton.disabled = false;\n        dislikeButton.disabled = true;\n        if ( previousValue === \"1\" ) {\n            adjustment = -2;\n        } else if ( previousValue === \"-1\" ) {\n            adjustment = 0;\n        } else {\n            adjustment = -1;\n        }\n    }\n\n    sessionStorage.setItem( buttonGroupId, uiEvt.target.value );\n    processAdjustment( eventId, questionId, adjustment, dispatch );\n\n}\n\nfunction setButtonGroupState( evid, qid, bnum ) {\n    let buttonGroupId = evid + \"-\" + qid;\n\n    // get the previousValue of the buttons (remember, these are treated like one button)\n    // get the button state for this question from session storage\n    // if the button state is not found, then set the previousValue to 0\n    // if the button state is found, then set the previousValue to the button state\n    let previousValue = sessionStorage.getItem( buttonGroupId );\n    if ( previousValue === undefined || previousValue === null ) {\n        previousValue = 0;\n        sessionStorage.setItem( buttonGroupId, previousValue );\n    }\n\n    // if neutral button pressed, then if the question was liked, subtract 1 from the ranking\n    // if neutral button pressed, then if the question was disliked, add 1 to the ranking\n    // if neutral button pressed, then if the question was neutral, do nothing\n    // if like button pressed, then if the question was liked, do nothing\n    // if like button pressed, then if the question was disliked, add 2 to the ranking\n    // if like button pressed, then if the question was neutral, add 1 to the ranking\n    // if dislike button pressed, then if the question was liked, subtract 2 from the ranking\n    // if dislike button pressed, then if the question was disliked, do nothing\n    // if dislike button pressed, then if the question was neutral, subtract 1 from the ranking\n\n    if ( previousValue === \"0\" ) {\n        // like button unpressed\n        // neutral button pressed\n        // dislike button unpressed\n        if ( bnum === 0 ) return false;\n        if ( bnum === 1 ) return true;\n        if ( bnum === 2 ) return false;\n    } else if ( previousValue === \"1\" ) {\n        // like button pressed\n        // neutral button unpressed\n        // dislike button unpressed\n        if ( bnum === 0 ) return true;\n        if ( bnum === 1 ) return false;\n        if ( bnum === 2 ) return false;\n    } else if ( previousValue === \"-1\" ) {\n        // like button unpressed\n        // neutral button unpressed\n        // dislike button pressed\n        if ( bnum === 0 ) return false;\n        if ( bnum === 1 ) return false;\n        if ( bnum === 2 ) return true;\n    }\n\n}\n\n\nexport default EventDetail;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}