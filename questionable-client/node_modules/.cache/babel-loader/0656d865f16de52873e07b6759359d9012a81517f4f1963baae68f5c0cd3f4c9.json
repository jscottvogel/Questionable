{"ast":null,"code":"var _jsxFileName = \"/home/fred/Questionable/questionable-client/src/features/events/EventList.js\",\n  _s = $RefreshSig$();\nimport { Card, Button } from 'react-bootstrap';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { fetchEvents } from './eventsSlice';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst selectEvents = state => state.events;\nfunction EventList() {\n  _s();\n  const eventState = useSelector(selectEvents);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    fetchEvents(dispatch, eventState);\n  }, [dispatch, eventState]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      bg: \"light\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"md-auto text-center p-4\",\n        children: \"Upcoming Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mb-3\",\n          children: eventState.events.filter(event => event.isActive === true).map(event => /*#__PURE__*/_jsxDEV(Card, {\n            border: \"secondary\",\n            bg: 'light',\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: event.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: event.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  navigate(`/event/${event.id}`);\n                },\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventList, \"qwY8ofyjBpR1HViiSGRT0eaT75s=\", false, function () {\n  return [useSelector, useNavigate, useDispatch];\n});\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["Card","Button","Container","Row","Col","useNavigate","useSelector","useDispatch","fetchEvents","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","selectEvents","state","events","EventList","_s","eventState","navigate","dispatch","children","bg","className","fileName","_jsxFileName","lineNumber","columnNumber","filter","event","isActive","map","border","Body","Title","name","date","onClick","id","_c","$RefreshReg$"],"sources":["/home/fred/Questionable/questionable-client/src/features/events/EventList.js"],"sourcesContent":["import { Card, Button } from 'react-bootstrap';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { fetchEvents } from './eventsSlice';\nimport { useEffect } from 'react';\n\nconst selectEvents = state => state.events\n\nfunction EventList() {\n    const eventState = useSelector( selectEvents );\n\n    const navigate = useNavigate();\n\n    const dispatch = useDispatch();\n\n    useEffect( () => {\n        fetchEvents( dispatch, eventState );\n    }, [ dispatch, eventState ] );\n\n    return (\n        <>\n\n            <Container bg=\"light\">\n                <h2 className=\"md-auto text-center p-4\">Upcoming Events</h2>\n                <Row className=\"mb-3\">\n                    <Col className=\"mb-3\">\n                        { eventState.events.filter( event => event.isActive === true ).map( event => (\n                            <Card border=\"secondary\"\n                                bg={ 'light' }\n                                key={ event.id }>\n                                <Card.Body>\n                                    <Card.Title >{ event.name }</Card.Title>\n                                    <Card.Body >\n                                        { event.date }\n                                    </Card.Body>\n                                    {\n                                        <Button onClick={ () => { navigate( `/event/${ event.id }` ) } }>View Details</Button>\n                                    }\n                                </Card.Body>\n                            </Card>\n                        ) ) }\n                    </Col>\n                </Row>\n\n            </Container>\n\n\n\n\n        </> );\n}\n\nexport default EventList;"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAC9C,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,YAAY,GAAGC,KAAK,IAAIA,KAAK,CAACC,MAAM;AAE1C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,UAAU,GAAGb,WAAW,CAAEQ,YAAa,CAAC;EAE9C,MAAMM,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9BE,SAAS,CAAE,MAAM;IACbD,WAAW,CAAEa,QAAQ,EAAEF,UAAW,CAAC;EACvC,CAAC,EAAE,CAAEE,QAAQ,EAAEF,UAAU,CAAG,CAAC;EAE7B,oBACIR,OAAA,CAAAE,SAAA;IAAAS,QAAA,eAEIX,OAAA,CAACT,SAAS;MAACqB,EAAE,EAAC,OAAO;MAAAD,QAAA,gBACjBX,OAAA;QAAIa,SAAS,EAAC,yBAAyB;QAAAF,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5DjB,OAAA,CAACR,GAAG;QAACqB,SAAS,EAAC,MAAM;QAAAF,QAAA,eACjBX,OAAA,CAACP,GAAG;UAACoB,SAAS,EAAC,MAAM;UAAAF,QAAA,EACfH,UAAU,CAACH,MAAM,CAACa,MAAM,CAAEC,KAAK,IAAIA,KAAK,CAACC,QAAQ,KAAK,IAAK,CAAC,CAACC,GAAG,CAAEF,KAAK,iBACrEnB,OAAA,CAACX,IAAI;YAACiC,MAAM,EAAC,WAAW;YACpBV,EAAE,EAAG,OAAS;YAAAD,QAAA,eAEdX,OAAA,CAACX,IAAI,CAACkC,IAAI;cAAAZ,QAAA,gBACNX,OAAA,CAACX,IAAI,CAACmC,KAAK;gBAAAb,QAAA,EAAIQ,KAAK,CAACM;cAAI;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAc,CAAC,eACxCjB,OAAA,CAACX,IAAI,CAACkC,IAAI;gBAAAZ,QAAA,EACJQ,KAAK,CAACO;cAAI;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eAERjB,OAAA,CAACV,MAAM;gBAACqC,OAAO,EAAGA,CAAA,KAAM;kBAAElB,QAAQ,CAAG,UAAUU,KAAK,CAACS,EAAI,EAAE,CAAC;gBAAC,CAAG;gBAAAjB,QAAA,EAAC;cAAY;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEnF;UAAC,GATNE,KAAK,CAACS,EAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUZ,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;EAAC,gBAKd,CAAC;AACX;AAACV,EAAA,CA1CQD,SAAS;EAAA,QACKX,WAAW,EAEbD,WAAW,EAEXE,WAAW;AAAA;AAAAiC,EAAA,GALvBvB,SAAS;AA4ClB,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}