{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst proxyHost = '127.0.0.1';\nconst proxyPort = 3500;\n\n// Proxy URL\nconst proxyUrl = `http://${proxyHost}:${proxyPort}`;\nconst initialState = [];\nconst eventsSlice = createSlice({\n  name: 'events',\n  initialState: {\n    events: initialState\n  },\n  reducers: {\n    loadEvents: (state, action) => {\n      // check to see if there are any new events\n      // if so, add them to the state\n      // if not, do nothing\n      if (state.events.length === 0) {\n        state.events = action.payload;\n      } else {\n        let temp = state.events.filter(event => event.id !== action.payload.id);\n        if (temp.length !== state.events.length) {\n          state.events = action.payload;\n        }\n      }\n    },\n    addEvent: (state, action) => {\n      let newEvent = {};\n      newEvent.name = action.payload.name;\n      newEvent.eventDate = action.payload.eventDate;\n      newEvent.questions = action.payload.questions;\n      newEvent.isActive = action.payload.isActive;\n      newEvent.description = action.payload.description;\n      let evt = addNewEvent(newEvent);\n      console.log(\"addEvent\");\n      console.log(evt);\n      if (evt !== null) {\n        state.events.push(evt);\n      }\n    },\n    deleteEvent: (state, action) => {\n      const eventId = action.payload;\n      state.events = state.events.filter(event => event.id !== eventId);\n    }\n  }\n});\n\n// Write a function that has `dispatch` and `getState` as arguments\nconst fetchEvents = (dispatch, getState) => {\n  // Make an async HTTP request\n  return fetch('http://127.0.0.1:3500/events', {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached\n  }).then(res => {\n    //console.log( res );\n    const evts = res.json();\n    //console.log( evts );\n    return evts;\n  }).then(evts => {\n    dispatch({\n      type: \"events/loadEvents\",\n      payload: evts\n    });\n  }).catch(err => console.log(err));\n  // todo, error condition\n};\n\nfunction removeEvent(id, dispatch) {\n  //console.log( \"deleteEvent: \" + id );\n  return fetch(`http://127.0.0.1:3500/event/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached\n  }).then(response => {\n    if (response.ok) {\n      dispatch({\n        type: \"events/deleteEvent\",\n        payload: id\n      });\n    } else {\n      console.log(response);\n      console.log(\"Event not deleted\");\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n}\nfunction addNewEvent(newEvent) {\n  return fetch(`http://\n${proxyHost}:${proxyPort}/event`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    body: JSON.stringify(newEvent)\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      console.log(response);\n      console.log(\"Event not added\");\n      return null;\n    }\n  }).catch(error => {\n    console.log(error);\n    return null;\n  });\n}\nexport const {\n  loadEvents,\n  addEvent,\n  deleteEvent\n} = eventsSlice.actions;\nexport { fetchEvents, removeEvent };\nexport default eventsSlice.reducer;","map":{"version":3,"names":["createSlice","proxyHost","proxyPort","proxyUrl","initialState","eventsSlice","name","events","reducers","loadEvents","state","action","length","payload","temp","filter","event","id","addEvent","newEvent","eventDate","questions","isActive","description","evt","addNewEvent","console","log","push","deleteEvent","eventId","fetchEvents","dispatch","getState","fetch","method","headers","cache","then","res","evts","json","type","catch","err","removeEvent","response","ok","error","body","JSON","stringify","actions","reducer"],"sources":["/home/fred/Questionable/questionable-client/src/features/events/eventsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst proxyHost = '127.0.0.1';\nconst proxyPort = 3500;\n\n// Proxy URL\nconst proxyUrl = `http://${ proxyHost }:${ proxyPort }`;\n\nconst initialState = [];\n\nconst eventsSlice = createSlice( {\n    name: 'events',\n    initialState: {\n        events: initialState\n    },\n    reducers: {\n        loadEvents: ( state, action ) => {\n            // check to see if there are any new events\n            // if so, add them to the state\n            // if not, do nothing\n            if ( state.events.length === 0 ) {\n                state.events = action.payload;\n            } else {\n                let temp = state.events.filter( event => event.id !== action.payload.id );\n                if ( temp.length !== state.events.length ) {\n                    state.events = action.payload;\n                }\n            }\n        },\n        addEvent: ( state, action ) => {\n            let newEvent = {};\n            newEvent.name = action.payload.name;\n            newEvent.eventDate = action.payload.eventDate;\n            newEvent.questions = action.payload.questions;\n            newEvent.isActive = action.payload.isActive;\n            newEvent.description = action.payload.description;\n\n            let evt = addNewEvent( newEvent );\n\n            console.log( \"addEvent\" );\n            console.log( evt );\n\n            if ( evt !== null ) {\n                state.events.push( evt );\n            }\n        },\n        deleteEvent: ( state, action ) => {\n            const eventId = action.payload;\n            state.events = state.events.filter( event => event.id !== eventId );\n        }\n    }\n} );\n\n// Write a function that has `dispatch` and `getState` as arguments\nconst fetchEvents = ( dispatch, getState ) => {\n    // Make an async HTTP request\n    return fetch( 'http://127.0.0.1:3500/events', {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n        cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached\n    } ).then( res => {\n        //console.log( res );\n        const evts = res.json();\n        //console.log( evts );\n        return evts;\n    } ).then( evts => {\n        dispatch( { type: \"events/loadEvents\", payload: evts } );\n    } ).catch( err => console.log( err ) );\n    // todo, error condition\n\n}\n\nfunction removeEvent( id, dispatch ) {\n    //console.log( \"deleteEvent: \" + id );\n    return fetch( `http://127.0.0.1:3500/event/${ id }`, {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n        cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached\n    } )\n        .then( response => {\n            if ( response.ok ) {\n                dispatch( { type: \"events/deleteEvent\", payload: id } );\n            } else {\n                console.log( response );\n                console.log( \"Event not deleted\" );\n            }\n        } )\n        .catch( error => {\n            console.log( error );\n        } );\n}\n\nfunction addNewEvent( newEvent ) {\n    return fetch( `http://\n${ proxyHost }:${ proxyPort }/event`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        body: JSON.stringify( newEvent )\n    } )\n        .then( response => {\n            if ( response.ok ) {\n                return response.json();\n            } else {\n                console.log( response );\n                console.log( \"Event not added\" );\n                return null;\n            }\n        } )\n        .catch( error => {\n            console.log( error );\n            return null;\n        } );\n}\n\nexport const { loadEvents, addEvent, deleteEvent } = eventsSlice.actions;\n\nexport { fetchEvents, removeEvent };\n\nexport default eventsSlice.reducer;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}